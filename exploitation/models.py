import django_filters

from django.contrib.auth.models import User
from django.db import models
from django import forms
from django_currentuser.db.models import CurrentUserField

from reference_books.models import ServiceCompanies, CoWorker, ModelTransmitter, TypeSecurity, Status, Client, \
    TypeRequest, TypeDocument


class eproposals(models.Model):
    TypeRequest = models.ForeignKey(TypeRequest, models.SET_NULL, verbose_name='Тип заявки', null=True, blank=True)
    TypeDocument = models.ForeignKey(TypeDocument, models.SET_NULL, verbose_name='Тип документа', null=True, blank=True)
    NumObject = models.CharField(u'№ объекта', max_length=10)
    model_transmitter = models.ForeignKey(ModelTransmitter, models.SET_NULL,
                                          verbose_name='Модель передатчика', null=True, blank=True)
    num_transmitter = models.CharField(u'Номер передатчика', max_length=15, null=True, blank=True)
    AddressObject = models.CharField(u'Адрес объекта', max_length=100)
    TypeSecurity = models.ManyToManyField(TypeSecurity, verbose_name='Тип сигнализации',
                                          help_text="Выбор нескольких позиций c нажатой кнопкой Ctrl")
    Client_choices = models.ForeignKey(Client, models.SET_NULL, verbose_name='Контрагент',
                                       help_text="Обязательно для заполнения перед закрытием заявки", null=True, blank=True)
    Client_words = models.CharField(u'Наименование', max_length=100, blank=True, null=True)
    ServiceCompany = models.ForeignKey(ServiceCompanies, verbose_name='Организация', on_delete=models.CASCADE)
    FaultAppearance = models.TextField(u'Вид неисправности')
    DescriptionWorks = models.TextField(u'Что сделали', blank=True)
    DateTime_schedule = models.DateField(u'Запланировано на:', null=True, blank=True)
    DateTime_work = models.DateField(u'Дата исполнения', null=True, blank=True)
    CoWorkers = models.ManyToManyField(CoWorker, verbose_name='Исполнитель', blank=True)
    Status = models.ForeignKey(Status, models.SET_NULL, verbose_name='Статус заявки', default=2, null=True)
    Required_act = models.BooleanField(u'Требуется акт', default=False)
    Written_act = models.BooleanField(u'Акт выписан', default=False)
    Date_act = models.DateField(u'Дата предоставления акта', null=True, blank=True)
    latitude = models.FloatField(u'Широта', null=True, blank=True)
    longitude = models.FloatField(u'Долгота', null=True, blank=True)

    DateTime_add = models.DateTimeField(u'Дата и время добавления', auto_now_add=True)
    DateTime_update = models.DateTimeField(u'Дата и время обновления', auto_now=True)

    Create_user = CurrentUserField(on_update=False, related_name='ep_creator')
    Update_user = CurrentUserField(on_update=True, related_name='ep_modifying')

    def __str__(self):
        return self.NumObject

    class Meta:
        app_label = 'exploitation'
        verbose_name = u'Заявка '
        verbose_name_plural = u'Список заявок '
        permissions = (
            ('custom_add', u'Добавить заявку'),
            ('custom_view', u'Просмотреть заявку'),
            ('custom_change', u'Изменить заявку'),
            ('change_akt', u'поле.Акт'),
            ('change_client', u'поле.Client'),
            ('change_status', u'поле.Статус'),
            ('change_transmitter', u'поле.Передатчик'),
        )


class eproposals_filter(django_filters.FilterSet):
    NumObject = django_filters.CharFilter(label=u'Номер объекта', widget=forms.TextInput())
    AddressObject = django_filters.CharFilter(label=u'Адрес объекта', widget=forms.TextInput())
    DateTime_schedule = django_filters.DateFilter(label=u'Запланировано',
                                                  widget=forms.DateInput(format='%Y-%m-%d', attrs={'type': 'date'}),
                                                  input_formats=('%Y-%m-%d',))
    Client_words = django_filters.CharFilter(label=u'Контрагент', widget=forms.TextInput())
    CoWorkers = django_filters.ModelChoiceFilter(label=u'Исполнитель', queryset=CoWorker.objects.all())

    class Meta:
        model = eproposals
        fields = ['NumObject', 'AddressObject', 'DateTime_schedule', 'Client_words', 'CoWorkers']
